//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Nginx.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace NginxDotnetParser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="NginxParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface INginxVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.config"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfig([NotNull] NginxParser.ConfigContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] NginxParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.genericStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericStatement([NotNull] NginxParser.GenericStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.regexHeaderStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegexHeaderStatement([NotNull] NginxParser.RegexHeaderStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] NginxParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.genericBlockHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericBlockHeader([NotNull] NginxParser.GenericBlockHeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_statement([NotNull] NginxParser.If_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.if_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_body([NotNull] NginxParser.If_bodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.regexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegexp([NotNull] NginxParser.RegexpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.locationBlockHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocationBlockHeader([NotNull] NginxParser.LocationBlockHeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NginxParser.rewriteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRewriteStatement([NotNull] NginxParser.RewriteStatementContext context);
}
} // namespace NginxDotnetParser
